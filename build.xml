<!--
  This is a simple-minded ant build file that will package the MLJCR
  source and binaries into a zip file.

  This file blindly packages everything in the listed subdirectories.
  They should be clean (ant cleanest) when you run this, otherwise the
  compiled classes and jar files will also be bundled up.

  The binary package does a build in each of the MLJCR source dirs
  and then bundles the jar files, XQuery code and docs into a single zip file.

  Copyright (c) 2009,  Mark Logic Corporation. All Rights Reserved.
  -->

<project name="MLJCR-package" default="all">
	<tstamp><format property="date-string" pattern="MMMM dd, yyyy"/></tstamp>

	<!-- TODO: place zip files in "deliverables" dir? -->
	<property name="src.zip" value="mljcr-src.zip"/>
	<property name="bin.zip" value="mljcr-bin.zip"/>
	<property name="stage.dir" value="stagetmp"/>
	<property name="stage.lib" value="${stage.dir}/lib"/>
	<property name="stage.xquery" value="${stage.dir}/Modules/MarkLogic"/>
	<property name="stage.doc" value="${stage.dir}/docs"/>

	<target name="package.src">
		<zip zipfile="${src.zip}" basedir=".">
			<include name="build.xml"/>
			<include name="mljcr/**"/>
			<include name="mljcr-1.4/**"/>
			<include name="mljcr-1.3/**"/>
			<include name="mljcr-1.3/**"/>
			<include name="dist/**"/>
		</zip>
	</target>

	<target name="package.bin" depends="compile">
		<mkdir dir="${stage.dir}"/>
		<mkdir dir="${stage.lib}"/>
		<mkdir dir="${stage.xquery}" />
		<mkdir dir="${stage.doc}"/>

		<copy todir="${stage.lib}">
			<fileset dir="mljcr/deliverable"/>
			<fileset dir="mljcr-1.4/deliverable"/>
			<fileset dir="mljcr-1.3/deliverable"/>
		</copy>
		<copy todir="${stage.lib}">
			<fileset dir="docs" includes="readme-jars.txt"/>
		</copy>

		<copy todir="${stage.xquery}">
			<fileset dir="mljcr/src/xquery"/>
		</copy>
		<copy todir="${stage.xquery}">
			<fileset dir="docs" includes="readme-modules.txt"/>
		</copy>

		<copy todir="${stage.doc}">
			<fileset dir="docs"/>
		</copy>

		<zip zipfile="${bin.zip}" basedir="${stage.dir}"
			includes="*/**" excludes="**/use-cases/*,**/test/*"/>

		<delete dir="${stage.dir}"/>
	</target>


	<!-- Compile code packages -->
	<target name="compile.core">
		<exec executable="ant" failonerror="true" dir="mljcr"/>
	</target>

	<target name="compile.compat.1.3">
		<exec executable="ant" failonerror="true" dir="mljcr-1.3"/>
	</target>

	<target name="compile.compat.1.4">
		<exec executable="ant" failonerror="true" dir="mljcr-1.4"/>
	</target>

	<!-- Cleanup code packages -->
	<target name="clean.core">
		<exec executable="ant" failonerror="true" dir="mljcr">
			<arg value="cleanest"/>
		</exec>
	</target>

	<target name="clean.compat.1.3">
		<exec executable="ant" failonerror="true" dir="mljcr-1.3">
			<arg value="cleanest"/>
		</exec>
	</target>

	<target name="clean.compat.1.4">
		<exec executable="ant" failonerror="true" dir="mljcr-1.4">
			<arg value="cleanest"/>
		</exec>
	</target>

	<target name="compile" depends="compile.core,compile.compat.1.4,compile.compat.1.3"/>
	<target name="clean" depends="clean.core,clean.compat.1.4,clean.compat.1.3"/>
	<target name="all" depends="package.src,package.bin"/>
</project>

